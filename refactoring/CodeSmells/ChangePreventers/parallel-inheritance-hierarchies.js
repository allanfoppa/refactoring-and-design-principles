// NOTE: EXAMPLE GENERATED BY AI

// Before Refactoring: Parallel Inheritance Hierarchies
class Engine {
  start() {
    console.log("Engine started");
  }
}

class ElectricEngine extends Engine {
  chargeBattery() {
    console.log("Battery charging");
  }
}

class Vehicle {
  drive() {
    console.log("Vehicle is driving");
  }
}

class ElectricCar extends Vehicle {
  charge() {
    console.log("Electric car charging");
  }
}

// After Refactoring: Parallel Inheritance Hierarchies
class Engine {
  start() {
    console.log("Engine started");
  }
}

class ElectricEngine extends Engine {
  chargeBattery() {
    console.log("Battery charging");
  }
}

class Vehicle {
  constructor(engine) {
    this.engine = engine;
  }

  drive() {
    console.log("Vehicle is driving");
    this.engine.start();
  }
}

// Now ElectricCar is just a Vehicle with an ElectricEngine
const electricEngine = new ElectricEngine();
const electricCar = new Vehicle(electricEngine);

electricCar.drive();
electricEngine.chargeBattery();
