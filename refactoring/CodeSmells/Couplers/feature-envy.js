// NOTE: EXAMPLE GENERATED BY AI AND MODIFIED BY ME

// Before Refactoring
class Customer {
  constructor(name, address) {
    this.name = name;
    this.address = address;
  }
}

class Invoice {
  constructor(customer, amount) {
    this.customer = customer;
    this.amount = amount;
  }

  printInvoice() {
    // Feature Envy: Accessing Customer's data more than its own
    console.log(`Invoice for ${this.customer.name}`);
    console.log(`Address: ${this.customer.address}`);
    console.log(`Amount: $${this.amount}`);
  }
}

// Usage
const customerBefore = new Customer("John Doe", "123 Main St");
const invoiceBefore = new Invoice(customerBefore, 250);
invoiceBefore.printInvoice();

// After Refactoring
class Customer {
  constructor(name, address) {
    this.name = name;
    this.address = address;
  }

  getCustomerInformation() {
    return `Customer: ${this.name}\nAddress: ${this.address}`;
  }
}

class Invoice {
  constructor(customer, amount) {
    this.customer = customer;
    this.amount = amount;
  }

  printInvoice() {
    console.log(this.customer.getCustomerInformation());
    console.log(`Amount: $${this.amount}`);
  }
}

// Usage
const customer = new Customer("John Doe", "123 Main St");
const invoice = new Invoice(customer, 250);
invoice.printInvoice();
