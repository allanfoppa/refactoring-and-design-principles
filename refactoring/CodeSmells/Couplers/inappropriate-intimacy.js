// NOTE: EXAMPLE GENERATED BY AI AND MODIFIED BY ME

// Before Refactoring: Inappropriate Intimacy

class Address {
    constructor(street, city, zipCode) {
        this.street = street;
        this.city = city;
        this.zipCode = zipCode;
    }
}

class Person {
    constructor(name, address) {
        this.name = name;
        this.address = address;
    }

    getFullAddress() {
        // Person class is directly accessing the internal fields of Address
        return `${this.address.street}, ${this.address.city}, ${this.address.zipCode}`;
    }
}

// Usage
const address = new Address("123 Main St", "Springfield", "12345");
const person = new Person("John Doe", address);
console.log(person.getFullAddress());

// After Refactoring: Avoiding Inappropriate Intimacy
class Address {
  constructor(street, city, zipCode) {
    this.street = street;
    this.city = city;
    this.zipCode = zipCode;
  }

  getFullAddress() {
    return `${this.street}, ${this.city}, ${this.zipCode}`;
  }
}

class Person {
  constructor(name, address) {
    this.name = name;
    this.address = address;
  }

  getFullAddress() {
    // Delegates the responsibility to the Address class
    return this.address.getFullAddress();
  }
}

// Usage
const address = new Address("123 Main St", "Springfield", "12345");
const person = new Person("John Doe", address);
console.log(person.getFullAddress());
